#queste prime 3 righe le commento se devo usare postgres docker invece che il postgres locale

#spring.datasource.url=jdbc:postgresql://localhost:5432/artorias
#spring.datasource.username=artorias
#spring.datasource.password=password

#http://localhost:8080/api/v1/customers
#Nota: il nome che uso qui è quello che devo mettere nel dockercompose per dirgli dove andare
spring.datasource.url=jdbc:postgresql://dbpostgresql:5432/testdb
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=admin
spring.datasource.password=admin


# si connette a DB in docker, istruzioni in:
# https://info.crunchydata.com/blog/easy-postgresql-10-and-pgadmin-4-setup-with-docker
#spring.datasource.url=jdbc:postgresql://localhost:5432/testdb
#spring.datasource.username=yourusername
#spring.datasource.password=yoursecurepassword

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

# Because detection is disabled you have to set correct dialect by hand.
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

spring.security.oauth2.client.registration.google.client-id=199376930523-mff2kc990opqsh998ttlmmr0mu1dg33a.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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